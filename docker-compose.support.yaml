
# Supporting services, like database that always must be online
version: '3.5'

services:
  glances:
    image: nicolargo/glances:latest-full
    volumes:
      - "./glances/glances.conf:/glances/conf/glances.conf"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    network_mode: 'host'
    environment:
      - GLANCES_OPT=-w
  synapse:
    image: "matrixdotorg/synapse:v1.60.0"
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:18008:8008"
      - "127.0.0.1:18448:8448"
    volumes:
      - ".docker/data/im:/data"
    env_file:
      - '.env.im'
    depends_on:
      - redis
      - database
  synapse_riot:
    image: "vectorim/element-web:latest"
    restart: "unless-stopped"
    ports:
      - "127.0.0.1:18010:80"
    volumes:
      - ".docker/data/synapse_riot/config.json:/app/config.json"
    depends_on:
      - synapse
  synapse_admin:
    image: awesometechnologies/synapse-admin:latest
    ports:
      - "127.0.0.1:18009:80"
    depends_on:
      - synapse
  # protonmail:
  #   image: macbury/protonmail:latest
  #   restart: unless-stopped
  #   volumes:
  #     - .docker/data/protonmail:/root
  transfer:
    image: dutchcoders/transfer.sh:latest
    ports:
      - "18031:8080"
    env_file:
      - '.env.transfer'
    restart: always
  ci:
    image: drone/drone:1.9.0
    env_file:
      - '.env.ci'
    restart: always
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - .docker/data/drone:/data
    ports:
      - "4282:80"
    depends_on:
      - git
  git:
    image: gitea/gitea:latest
    env_file:
      - '.env.git'
    restart: always
    volumes:
      - .docker/data/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3282:3000"
      - "2222:22"
    depends_on:
      - database
  rss-bridge:
    image: rssbridge/rss-bridge:latest
    dns:
      - 9.9.9.9
      - 149.112.112.112
    ports:
      - '59900:80'
  node-red:
    build: ./node-red/
    restart: unless-stopped
    dns:
      - 9.9.9.9
      - 149.112.112.112
    ports:
      - 51880:1880
    environment:
      - TZ=Europe/Warsaw
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    volumes:
      - .docker/data/node-red:/data
      - /mnt/Music:/music
  gotify:
    image: gotify/server:latest
    ports:
      - "0.0.0.0:5580:80"
    volumes:
      - .docker/data/gotify:/app/data
  redis:
    image: redis:4.0.10
    ports:
      - 6379:6379
    volumes:
      - .docker/data/redis:/data
  nextcloud:
    build: ./nextcloud/
    ports:
      - 4333:9000
    env_file:
      - '.env.nextcloud'
    volumes:
      - .docker/data/nextcloud_next:/var/www/html
    depends_on:
      - database
      - redis
    healthcheck:
      test: [ "CMD", "curl", "http://localhost" ]
      timeout: 45s
      interval: 30s
      retries: 3
  database:
    image: postgres:14.3-alpine3.16
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: "md5"
    security_opt:
      - seccomp:unconfined
    ports:
      - 0.0.0.0:4101:5432
    environment:
      PGDATA: /data
    env_file:
      - '.env.postgresql'
    volumes:
      - .docker/data/next_postgresql:/data
  esphome:
    image: esphome/esphome:latest
    volumes:
      - .docker/data/esphome:/config
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
  monio:
    restart: unless-stopped
    image: macbury/mon.io:latest
    ports:
      - 14000:3000
    volumes:
      - .docker/data/monio/:/app/storage
    env_file:
      - .env.monio
    depends_on:
      - database
