- hosts: anarchopi
  become: yes
  roles:
    - role: weareinteractive.ufw
  vars:
    ufw_reset: no
    ufw_logging: "off"
    ufw_rules:
      - { port: 53, rule: allow, comment: "Adguard DNS" }
      - { port: 3000, rule: allow, comment: "Adguard install WebUI" }
      - { port: 6300, rule: allow, comment: "Adguard WebUI" }
      - { port: 68, rule: allow, comment: 'Allow Adguard DNS' }
      - { port: 853, rule: allow, comment: 'Allow Adguard DNS' }
      - { port: 67, rule: allow, comment: 'Allow PiHole DNS' }
  tasks:
    - name: Check if adguard is installed
      command: 'AdGuardHome --version'
      register: adguard_is_installed
      ignore_errors: True
    - name: Download ADGuard
      when: adguard_is_installed is failed
      get_url:
        url: https://static.adguard.com/adguardhome/release/AdGuardHome_linux_arm.tar.gz
        dest: /tmp/AdGuardHome_linux_arm.tar.gz
    - name: Extract ADGuard
      when: adguard_is_installed is failed
      unarchive:
        remote_src: yes
        src: /tmp/AdGuardHome_linux_arm.tar.gz
        dest: /tmp
    - name: Copy adguard to /usr/bin
      when: adguard_is_installed is failed
      copy:
        remote_src: yes
        src: /tmp/AdGuardHome/AdGuardHome
        dest: /usr/bin/AdGuardHome
        owner: root
        group: root
        mode: '0555'
    - name: Install Adguard
      become: yes
      when: adguard_is_installed is failed
      command: 
        cmd: 'AdGuardHome -s install'
        chdir: /root

- hosts: master
  become: yes
  roles:
    - role: geerlingguy.certbot
  vars:
    certbot_auto_renew: false
    certbot_admin_email: "{{ email }}"
    certbot_create_if_missing: true
    certbot_certs:
      - domains:
        - "{{ adguard_domain }}"

# Nginx
- hosts: master
  become: yes
  roles:
    - role: geerlingguy.nginx
  handlers:
    - name: restart nginx
      become: yes
      service:
        name: nginx
        enabled: yes
        state: restarted
  tasks:
    - name: Create /etc/nginx/sites-enabled/ads.conf
      template:
        src: ads.conf.j2
        dest: /etc/nginx/sites-enabled/ads.conf
      notify:
        - reload nginx
        - restart nginx