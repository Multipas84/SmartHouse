- hosts: master
  become: yes
  roles:
     - role: geerlingguy.certbot
  vars:
    certbot_auto_renew: false
    certbot_admin_email: "{{ email }}"
    certbot_create_if_missing: true
    certbot_certs:
      - domains:
        - "{{ audio_book_domain }}"

# - hosts: master
#   become: yes
#   roles:
#     - role: geerlingguy.certbot
#   vars:
#     certbot_auto_renew: false
#     certbot_admin_email: "{{ email }}"
#     certbot_create_if_missing: true
#     certbot_certs:
#       - domains:
#         - "{{ media_domain }}"

# - hosts: master
#   become: yes
#   roles:
#     - role: geerlingguy.certbot
#   vars:
#     certbot_install_from_source: true
#     certbot_keep_updated: true
#     certbot_auto_renew: false
#     certbot_admin_email: "{{ email }}"
#     certbot_create_if_missing: true
#     certbot_create_method: standalone
#     certbot_certs:
#       - domains:
#         - "{{ plex_domain }}"

# Nginx
- hosts: master
  become: yes
  roles:
    - role: geerlingguy.nginx
  handlers:
    - name: restart nginx
      become: yes
      service:
        name: nginx
        enabled: yes
        state: restarted
  tasks:
    - name: Create /etc/nginx/sites-enabled/audiobook.conf
      template:
        src: audiobook.conf.j2
        dest: /etc/nginx/sites-enabled/audiobook.conf
      notify:
        - reload nginx
        - restart nginx
#     - name: Create /etc/nginx/sites-enabled/media.conf
#       template:
#         src: media.conf.j2
#         dest: /etc/nginx/sites-enabled/media.conf
#       notify:
#         - reload nginx
#         - restart nginx
#     - name: Create /etc/nginx/sites-enabled/plex.conf
#       template:
#         src: plex.conf.j2
#         dest: /etc/nginx/sites-enabled/plex.conf
#       notify:
#         - reload nginx
#         - restart nginx

#     - name: Create /etc/nginx/sites-enabled/sonarr.conf
#       template:
#         src: sonarr.conf.j2
#         dest: /etc/nginx/sites-enabled/sonarr.conf
#       notify:
#         - reload nginx
#         - restart nginx


# - hosts: 
#     - media
#     - master
#   become: yes
#   roles:
#     - role: weareinteractive.ufw
#   vars:
#     ansible_os_family: 'Debian'
#     ufw_reset: no
#     ufw_logging: "off"
#     ufw_rules:
#       - { port: 22, rule: allow, comment: 'ssh' }
#       - { port: 7359, rule: allow, comment: 'Emby port' }
#       - { port: 1900, rule: allow, comment: 'Emby port' }
#       - { port: 32400, rule: allow, comment: 'Plex companion' }
#       - { port: 3005, rule: allow, comment: 'Plex companion' }
#       - { port: 5353, rule: allow, comment: 'Plex bonjur shit' }
#       - { port: 1900, rule: allow, comment: 'Plex dlna shit' }
#       - { port: 8324, rule: allow, comment: 'Plex other shit' }
#       - { port: 32469, rule: allow, comment: 'Plex other shit' }
#       - { port: 32410, rule: allow, comment: 'Plex GDM network discover' }
#       - { port: 32412, rule: allow, comment: 'Plex GDM network discover' }
#       - { port: 32413, rule: allow, comment: 'Plex GDM network discover' }
#       - { port: 32414, rule: allow, comment: 'Plex GDM network discover' }
#       - { port: 8096, rule: allow, comment: 'Emby webui' }
#       - { port: 61208, rule: allow, comment: 'Glances' }


- hosts: 
    - media
  become: yes
  tasks:
    - name: Create movies directory
      file:
        group: emby
        owner: emby
        path: /var/lib/emby/content/{{ item.share }}
        state: directory
      loop:
        - { share: 'Movies' }
        - { share: 'MoviesAndTV' }
        - { share: 'Music' }
        - { share: 'Public' }
    - name: mount movies directory
      mount:
        state: mounted
        fstype: cifs
        opts: "domain=192.168.1.181,username={{ qnap_username }},password={{ qnap_password }},noperm,iocharset=utf8,file_mode=0775,dir_mode=0775,gid=emby,uid=emby"
        src: "//192.168.1.181/{{ item.share }}"
        path: "/var/lib/emby/content/{{ item.share }}"
      loop:
        - { share: 'Movies' }
        - { share: 'MoviesAndTV' }
        - { share: 'Music' }
        - { share: 'Public' }
