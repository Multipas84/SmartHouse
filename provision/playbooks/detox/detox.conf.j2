upstream detox {
  server 127.0.0.1:11000 fail_timeout=5;
}

server {
  listen 80;
  listen [::]:80;
  server_name {{ detox_domain }};
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  ssl        on;
  ssl_certificate /etc/letsencrypt/live/{{ detox_domain }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ detox_domain }}/privkey.pem;
  server_name {{ detox_domain }};

  location / {
    proxy_pass         http://detox;
    proxy_http_version 1.1;

    # Ensuring it can use websockets
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto http;
    proxy_redirect     http:// $scheme://;

    # The proxy must preserve the host because gotify verifies the host with the origin
    # for WebSocket connections
    proxy_set_header   Host $http_host;

    # These sets the timeout so that the websocket can stay alive
    proxy_connect_timeout   7m;
    proxy_send_timeout      7m;
    proxy_read_timeout      7m;
  }

  # Proxy download
  location ~* ^/warpipe/http(s?)://(.*?)/(.*) {
    # How to resove remote URLs, you may want to update this depending
    # on your setup, in our case itâ€™s inside a Docker container with
    # dnsmasq running.
    resolver 9.9.9.9 ipv6=off;
    # Do not allow people to mess with this location directly
    # Only internal redirects are allowed
    internal;

    # Extract download url from the request
    set $download_uri $3;
    set $download_host $2;
    set $download_protocol $1;

    expires 10d;

    proxy_set_header Host $download_host;
    proxy_hide_header Authorization;
    proxy_hide_header Cookie;
    proxy_hide_header Content-Disposition;
    proxy_hide_header X-Frame-Options;
    proxy_hide_header Set-Cookie;

    proxy_ignore_headers    X-Accel-Limit-Rate X-Accel-Expires Expires Cache-Control Set-Cookie Vary;
    proxy_hide_header       Content-Security-Policy;
    proxy_hide_header       Content-Security-Policy-Report-Only;
    proxy_hide_header       Expect-CT;
    proxy_hide_header       Expires;
    proxy_hide_header       Feature-Policy;
    proxy_hide_header       P3P;
    proxy_hide_header       Pragma;
    proxy_hide_header       Public-Key-Pins;
    proxy_hide_header       Public-Key-Pins-Report-Only;
    proxy_hide_header       Referrer-Policy;
    proxy_hide_header       Report-To;
    proxy_hide_header       Set-Cookie;
    proxy_hide_header       Source-Age;
    proxy_hide_header       Strict-Transport-Security;
    proxy_hide_header       Timing-Allow-Origin;
    proxy_hide_header       Vary;
    proxy_hide_header       Via;
    proxy_hide_header       X-Cache;
    proxy_hide_header       X-Cache-Hits;
    proxy_hide_header       X-Content-Type-Options;
    proxy_hide_header       X-GitHub-Request-Id;
    proxy_hide_header       X-hello;
    proxy_hide_header       X-Fastly-Request-ID;
    proxy_hide_header       X-Frame-Options;
    proxy_hide_header       X-XSS-Protection;
    proxy_hide_header       X-Runtime;
    proxy_hide_header       X-Served-By;
    proxy_hide_header       x-amz-cf-id;
    proxy_hide_header       x-amz-id-2;
    proxy_hide_header       x-amz-meta-server-side-encryption;
    proxy_hide_header       x-amz-request-id;
    proxy_hide_header       x-amz-server-side-encryption;
    proxy_hide_header       CF-Cache-Status;
    proxy_hide_header       CF-RAY;
    proxy_read_timeout 60;
    # Compose download url
    set $download_url http$download_protocol://$download_host/$download_uri$is_args$args;
    proxy_set_header Authorization "";
    # Do not touch local disks when proxying
    # content to clients
    proxy_max_temp_file_size 0;

    # Download the file and send it to client
    proxy_ssl_server_name on;
    proxy_ssl_verify off;
    proxy_pass $download_url;
    proxy_ssl_session_reuse off;
    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_proxy_redirect;
  }

  location @handle_proxy_redirect {
    proxy_read_timeout 30;
    resolver 9.9.9.9 ipv6=off;
    set $saved_redirect_location '$upstream_http_location';
    proxy_pass $saved_redirect_location;
  }

  error_page 404 403 @error;

  location @error {
    root /var/www;
    try_files /403.html /403.html;
  }

  client_max_body_size 50M;
  keepalive_timeout 10;
}